# frontend/nginx.conf - Version propre et s√©curis√©e
events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    server_tokens off;

    # üîí Map pour les headers de s√©curit√© globaux - CSP mise √† jour
    map $sent_http_content_type $csp_header {
        default "default-src 'self'; script-src 'self' 'unsafe-eval' https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdnjs.cloudflare.com; font-src 'self' https://fonts.gstatic.com https://cdnjs.cloudflare.com; img-src 'self' data: blob:; connect-src 'self'; frame-ancestors 'none'; frame-src 'none'; child-src 'none'; object-src 'none'; media-src 'self'; worker-src 'self'; manifest-src 'self'; base-uri 'self'; form-action 'self';";
        ~^text/html "default-src 'self'; script-src 'self' 'unsafe-eval' https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdnjs.cloudflare.com; font-src 'self' https://fonts.gstatic.com https://cdnjs.cloudflare.com; img-src 'self' data: blob:; connect-src 'self'; frame-ancestors 'none'; frame-src 'none'; child-src 'none'; object-src 'none'; media-src 'self'; worker-src 'self'; manifest-src 'self'; base-uri 'self'; form-action 'self';";
    }

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # üåê Serveur principal HTTP (pour commencer)
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # üîí Headers de s√©curit√© GLOBAUX - FIX Spectre
        add_header Content-Security-Policy $csp_header always;
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "0" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(), usb=(), bluetooth=(), accelerometer=(), gyroscope=(), magnetometer=(), ambient-light-sensor=(), autoplay=(), encrypted-media=(), fullscreen=(self), picture-in-picture=(), display-capture=()" always;
        add_header Cross-Origin-Embedder-Policy "require-corp" always;
        add_header Cross-Origin-Opener-Policy "same-origin" always;
        add_header Cross-Origin-Resource-Policy "same-origin" always;

        # üì¶ Fichiers statiques avec headers sp√©cifiques
        location ~* \.(js|mjs|css|png|jpg|jpeg|gif|ico|svg|woff2?|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable" always;
            add_header Vary "Accept-Encoding" always;

            # Headers de s√©curit√© maintenus pour les assets
            add_header Content-Security-Policy $csp_header always;
            add_header X-Frame-Options "DENY" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "0" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        }

        # üîÑ Proxy backend API avec headers s√©curis√©s
        location /api/ {
            proxy_pass http://api:3000;  # ‚úÖ URL interne Docker
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # Headers de s√©curit√© pour les r√©ponses API
            proxy_hide_header X-Powered-By;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-Frame-Options "DENY" always;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
        }

        # üîÅ SPA fallback avec headers explicites pour Vue.js
        location / {
            try_files $uri $uri/ @fallback;

            # ‚úÖ HEADERS DE S√âCURIT√â
            add_header X-Frame-Options "DENY" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "0" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(), usb=(), bluetooth=(), accelerometer=(), gyroscope=(), magnetometer=()" always;

            # ‚úÖ HEADERS CACHE
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
        }

        # üîÑ Fallback pour Vue.js router
        location @fallback {
            rewrite ^.*$ /index.html last;
        }

        # üö´ Route /admin bloqu√©e avec CSP compl√®te
        location = /admin {
            add_header Content-Security-Policy "default-src 'none'; frame-ancestors 'none'; object-src 'none';" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            return 403 '<!DOCTYPE html><html><head><title>403 Forbidden</title></head><body><h1>Access Denied</h1></body></html>';
        }

        # üö´ Toutes routes /admin/*
        location ^~ /admin/ {
            add_header Content-Security-Policy "default-src 'none'; frame-ancestors 'none'; object-src 'none';" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            return 403 '<!DOCTYPE html><html><head><title>403 Forbidden</title></head><body><h1>Access Denied</h1></body></html>';
        }

        # üö´ Fichiers sensibles
        location ~ /\.(git|svn|htaccess|htpasswd|env) {
            deny all;
            access_log off;
            log_not_found off;
            return 404;
        }

        # üö´ Fichiers de config Vue.js/Node.js
        location ~ /(package\.json|yarn\.lock|\..*rc|webpack\.config\.js|vite\.config\.js)$ {
            deny all;
            access_log off;
            log_not_found off;
            return 404;
        }

        # ü§ñ robots.txt avec headers corrects
        location = /robots.txt {
            add_header Content-Type "text/plain; charset=utf-8" always;
            add_header Cache-Control "public, max-age=86400" always;
            return 200 "User-agent: *\nDisallow: /admin\nAllow: /\n";
        }

        # üó∫Ô∏è sitemap.xml (404 contr√¥l√©)
        location = /sitemap.xml {
            add_header Content-Type "application/xml; charset=utf-8" always;
            add_header Content-Security-Policy "default-src 'none'; frame-ancestors 'none'; object-src 'none';" always;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header X-Content-Type-Options "nosniff" always;
            return 404 '<?xml version="1.0" encoding="UTF-8"?><e><message>Sitemap not available</message></e>';
        }

        # üè• Health check
        location = /health {
            access_log off;
            add_header Content-Type "application/json; charset=utf-8" always;
            return 200 '{"status":"ok","timestamp":"$time_iso8601"}';
        }

        # üìä Logs
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log warn;
    }

    # üîß Configuration additionnelle pour le debugging
    error_log /var/log/nginx/error.log debug;
}