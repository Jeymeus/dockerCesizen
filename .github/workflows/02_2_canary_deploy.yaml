
name: 02_2_Canary Deploy & Test

on:
  pull_request:
    branches: [release]

env:
  REGISTRY: ghcr.io

jobs:
  Deploy_Canary:
    name: üöÄ Deploy to Canary
    runs-on: ubuntu-latest
    environment: canary

    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: üìù Downcase Image Name
        run: echo "IMAGE_NAME_LOWER=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}

      - name: üì§ Upload Docker Compose
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.CANARY_HOST }}
          port: 22
          username: ${{ secrets.CANARY_USERNAME }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          source: "./docker-compose.canary.yml,./api/database/init.sql"
          target: "/opt/cesizen/"

      - name: üöÄ Deploy Application
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.CANARY_HOST }}
          port: 22
          username: ${{ secrets.CANARY_USERNAME }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          script: |
            cd /opt/cesizen
            
            # Create directory if needed
            sudo mkdir -p /opt/cesizen
            sudo chown ${{ secrets.CANARY_USERNAME }}:${{ secrets.CANARY_USERNAME }} /opt/cesizen
            
            # Login to GitHub Container Registry
            echo ${{ secrets.DCKCESIZEN_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            # Pull latest images
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}-api:canary
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}-frontend:canary
            
            # Create environment file
            cat > .env << EOF
            NODE_ENV=production
            DB_HOST=mariadb
            DB_USER=cesi
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_NAME=cesizen
            DB_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            PORT=3000
            VITE_API_URL=http://${{ secrets.CANARY_HOST }}:3000/api
            EOF
            
            # Deploy
            docker compose -f docker-compose.canary.yml down --remove-orphans || true
            docker compose -f docker-compose.canary.yml up -d
            
            # Wait and health check
            sleep 30
            curl -f http://localhost:3000/ || exit 1
            curl -f http://localhost:5173/ || exit 1
            
            echo "‚úÖ Canary deployment successful!"

  ZAP_Security_Scan:
      name: üõ°Ô∏è ZAP Security Test
      needs: [Deploy_Canary]
      runs-on: ubuntu-latest

      steps:
        - name: üì• Checkout
          uses: actions/checkout@v4

        # ‚úÖ Tester HTTPS
        - name: üõ°Ô∏è ZAP Scan HTTPS Frontend + API via proxy
          uses: zaproxy/action-baseline@v0.14.0
          with:
            target: 'https://${{ secrets.CANARY_HOST }}'  # HTTPS
            fail_action: true
            artifact_name: 'zap_scan_full'
            issue_title: 'Zap Full Stack Scan Report'

        # ‚úÖ Test que l'API n'est PAS accessible directement
        - name: üîí V√©rifier que API n'est pas publique
          run: |
            if curl -f -m 5 http://${{ secrets.CANARY_HOST }}:3000/ 2>/dev/null; then
              echo "‚ùå ERREUR: API est accessible publiquement!"
              exit 1
            else
              echo "‚úÖ OK: API n'est pas accessible publiquement"
            fi
            
        # ‚úÖ V√©rifier redirection HTTP ‚Üí HTTPS
        - name: üîí V√©rifier redirection HTTPS
          run: |
            RESPONSE=$(curl -s -I -L http://${{ secrets.CANARY_HOST }})
            if echo "$RESPONSE" | grep -q "301"; then
              echo "‚úÖ OK: Redirection HTTP ‚Üí HTTPS fonctionne"
            else
              echo "‚ùå ERREUR: Pas de redirection HTTPS"
              exit 1
            fi