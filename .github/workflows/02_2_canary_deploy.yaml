name: 02_2_Canary Deploy & Test

on:
  pull_request:
    branches: [release]

env:
  REGISTRY: ghcr.io

jobs:
  Deploy_Canary:
    name: 🚀 Deploy to Canary
    runs-on: ubuntu-latest
    environment: canary

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📝 Downcase Image Name
        run: echo "IMAGE_NAME_LOWER=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}

      - name: 📤 Upload Docker Compose
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.CANARY_HOST }}
          port: 22
          username: ${{ secrets.CANARY_USERNAME }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          source: "./docker-compose.canary.yml,./api/database/init.sql"
          target: "/opt/cesizen/"

      - name: 🚀 Deploy Application
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.CANARY_HOST }}
          port: 22
          username: ${{ secrets.CANARY_USERNAME }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          script: |
            cd /opt/cesizen
            
            # Create directory if needed
            sudo mkdir -p /opt/cesizen
            sudo chown ${{ secrets.CANARY_USERNAME }}:${{ secrets.CANARY_USERNAME }} /opt/cesizen
            
            # Login to GitHub Container Registry
            echo ${{ secrets.DCKCESIZEN_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            # Pull latest images
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}-api:canary
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}-frontend:canary
            
            # Create environment file
            cat > .env << EOF
            NODE_ENV=production
            DB_HOST=mariadb
            DB_USER=cesi
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_NAME=cesizen
            DB_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            PORT=3000
            VITE_API_URL=http://${{ secrets.CANARY_HOST }}:3000/api
            EOF
            
            # Deploy
            docker compose -f docker-compose.canary.yml down --remove-orphans || true
            docker compose -f docker-compose.canary.yml up -d
            
            # Wait and health check
            sleep 30
            curl -f http://localhost:3000/ || exit 1
            curl -f http://localhost:5173/ || exit 1
            
            echo "✅ Canary deployment successful!"

  ZAP_Security_Scan:
    name: 🛡️ ZAP Security Test
    needs: [Deploy_Canary]
    runs-on: ubuntu-latest
    permissions:
      actions: write
      issues: write

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🛡️ ZAP Scan Api
        uses: zaproxy/action-baseline@v0.9.0
        continue-on-error: true
        with:
          target: 'http://${{ secrets.CANARY_HOST }}:3000'
          fail_action: true
          artifact_name: 'zap_scan_api'
          issue_title: 'Zap APIScan Report'

      - name: 🛡️ ZAP Scan Frontend
        uses: zaproxy/action-baseline@v0.14.0
        continue-on-error: true
        with:
          target: 'http://${{ secrets.CANARY_HOST }}:5173'
          fail_action: true
          artifact_name: 'zap_scan_frontend'
          issue_title: 'Zap Frontend Scan Report'

      - name: ❌ Erreur ZAP si issues existent (API or Front)
        if: always()
        run: |
          echo "🔍 Checking for open ZAP issues..."
          BACK_COUNT=$(gh issue list --search "ZAP API Scan Report in:title state:open" --json number --jq 'length')
          FRONT_COUNT=$(gh issue list --search "ZAP Frontend Scan Report in:title state:open" --json number --jq 'length')
          
          echo "🔍 Trouvé $BACK_COUNT issues pour API"
          echo "🔍 Trouvé $FRONT_COUNT issues pour Frontend"
          
          if [ "$BACK_COUNT" -gt 0 ] || [ "$FRONT_COUNT" -gt 0 ]; then
            echo "❌ Au moins un problème ZAP est toujours ouvert. Échec du travail."
            exit 1
          else
            echo "✅ Aucun problème ZAP ouvert trouvé. Tout est clair."
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
